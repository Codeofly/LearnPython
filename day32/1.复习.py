# 正则模块
# 正则表达式
# 元字符 ：
    # .    匹配除了回车以外的所有字符
    # \w   数字字母下划线
    # \d   数字
    # \n \s \t 回车 空格 和 tab
    # ^    必须出现在一个正则表达式的最开始，匹配开头
    # $    必须出现在一个正则表达式的最后，匹配结尾
    # |  或
        #  a|b   要么取左边的要么取右边的
        #  ()|() 分组中的或 一定是长的在前面 短的在后面
    # []   在同一个位置上可能出现的所有字符都放在组里
    # [^]  在同一个位置上不能出现的所有字符都放在组里
    # ()   对于一整个组做量词约束 ； python 分组优先
# 量词 ：
    # *   0、多次
    # +   1、多
    # ？  0、1
    # {}  具体的 {n}，{n，m},{n,}
# 问好的用法
# 惰性匹配 : 量词+? 表示使用惰性匹配
# 分组优先 findall split  ；取消分组优先 (?:。。。)
# 分组命名 (?P<name>...)
import re
# ret=re.findall(r"\d+","1-2*(60+(-40.35/5)-(-4*3))")
# print(ret)
# 有的时候 不想要的内容需要被匹配出来
# 你不想要的东西包含着你想要的东西
# ret=re.findall(r"\d+\.\d+|(\d+)","1-2*(60+(-40.35/5)-(-4*3))")
# ret.remove('')
# print(ret)

